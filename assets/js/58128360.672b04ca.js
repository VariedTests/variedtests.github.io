"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[49921],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},f="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),f=s(n),u=r,m=f["".concat(p,".").concat(u)]||f[u]||l[u]||i;return n?o.createElement(m,a(a({ref:t},d),{},{components:n})):o.createElement(m,a({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[f]="string"==typeof e?e:r,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},75679:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var o=n(87462),r=(n(67294),n(3905));const i={id:"useNotification",title:"useNotification"},a=void 0,c={unversionedId:"api-reference/core/hooks/useNotification",id:"api-reference/core/hooks/useNotification",title:"useNotification",description:"It can be used to open or close notification at any time. It returns the open and close method from notificationProvider under the hood.",source:"@site/docs/api-reference/core/hooks/useNotification.md",sourceDirName:"api-reference/core/hooks",slug:"/api-reference/core/hooks/useNotification",permalink:"/docs/api-reference/core/hooks/useNotification",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/api-reference/core/hooks/useNotification.md",tags:[],version:"current",lastUpdatedBy:"Daniel Monettelli",lastUpdatedAt:1673291592,formattedLastUpdatedAt:"Jan 9, 2023",frontMatter:{id:"useNotification",title:"useNotification"},sidebar:"someSidebar",previous:{title:"useNavigation",permalink:"/docs/api-reference/core/hooks/navigation/useNavigation"},next:{title:"useTitle",permalink:"/docs/api-reference/core/hooks/refine/useTitle"}},p={},s=[{value:"Usage",id:"usage",level:2}],d={toc:s};function f(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"It can be used to ",(0,r.kt)("inlineCode",{parentName:"p"},"open")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"close")," notification at any time. It returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"open")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"close")," method from ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/notification-provider"},(0,r.kt)("inlineCode",{parentName:"a"},"notificationProvider"))," under the hood."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useNotification } from "@pankod/refine-core";\n\nconst { open, close } = useNotification();\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This hook can only be used if ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/notification-provider"},(0,r.kt)("inlineCode",{parentName:"a"},"notificationProvider"))," is provided. ")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you are using Ant Design you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"notificationProvider")," exported from ",(0,r.kt)("inlineCode",{parentName:"p"},"@pankod/refine-antd")," package. It is compatible with Ant Design's ",(0,r.kt)("a",{parentName:"p",href:"https://ant.design/components/notification/#header"},(0,r.kt)("inlineCode",{parentName:"a"},"notification"))," component."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { notificationProvider } from "@pankod/refine-antd";\n\n<Refine\n    ...\n    notificationProvider={notificationProvider}\n/>\n'))))}f.isMDXComponent=!0}}]);