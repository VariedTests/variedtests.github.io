"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[41659],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=o,h=c["".concat(p,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(h,r(r({ref:t},d),{},{components:n})):a.createElement(h,r({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:o,r[1]=l;for(var s=2;s<i;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3689:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(87462),o=(n(67294),n(3905));const i={id:"refine-config",title:"<Refine>",sidebar_label:"<Refine>"},r=void 0,l={unversionedId:"api-references/components/refine-config",id:"version-2.xx.xx/api-references/components/refine-config",title:"<Refine>",description:"`` component is the entry point of a refine app. It is where the highest level of configuration of the app occurs.",source:"@site/versioned_docs/version-2.xx.xx/api-references/components/refine-config.md",sourceDirName:"api-references/components",slug:"/api-references/components/refine-config",permalink:"/docs/2.xx.xx/api-references/components/refine-config",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/versioned_docs/version-2.xx.xx/api-references/components/refine-config.md",tags:[],version:"2.xx.xx",lastUpdatedBy:"Daniel Monettelli",lastUpdatedAt:1673291592,formattedLastUpdatedAt:"Jan 9, 2023",frontMatter:{id:"refine-config",title:"<Refine>",sidebar_label:"<Refine>"},sidebar:"version-2.xx.xx/someSidebar",previous:{title:"useModal",permalink:"/docs/2.xx.xx/api-references/hooks/ui/useModal"},next:{title:"<LayoutWrapper>",permalink:"/docs/2.xx.xx/api-references/components/layout-wrapper"}},p={},s=[{value:"<code>dataProvider</code>",id:"dataprovider",level:2},{value:"<code>routerProvider</code>",id:"routerprovider",level:2},{value:"<code>resources</code>",id:"resources",level:2},{value:"<code>name</code>",id:"name",level:3},{value:"<code>list</code>",id:"list",level:3},{value:"<code>create</code>",id:"create",level:3},{value:"<code>edit</code>",id:"edit",level:3},{value:"<code>show</code>",id:"show",level:3},{value:"<code>canDelete</code>",id:"candelete",level:3},{value:"<code>icon</code>",id:"icon",level:3},{value:"<code>options</code>",id:"options",level:3},{value:"<code>label</code>",id:"label",level:4},{value:"<code>route</code>",id:"route",level:4},{value:"<code>authProvider</code>",id:"authprovider",level:2},{value:"<code>i18nProvider</code>",id:"i18nprovider",level:2},{value:"<code>accessControlProvider</code>",id:"accesscontrolprovider",level:2},{value:"<code>liveProvider</code>",id:"liveprovider",level:2},{value:"<code>catchAll</code>",id:"catchall",level:2},{value:"<code>mutationMode</code>",id:"mutationmode",level:2},{value:"<code>undoableTimeout</code>",id:"undoabletimeout",level:2},{value:"<code>syncWithLocation</code>",id:"syncwithlocation",level:2},{value:"<code>warnWhenUnsavedChanges</code>",id:"warnwhenunsavedchanges",level:2},{value:"<code>liveMode</code>",id:"livemode",level:2},{value:"<code>onLiveEvent</code>",id:"onliveevent",level:2},{value:"<code>configProviderProps</code>",id:"configproviderprops",level:2},{value:"<code>LoginPage</code>",id:"loginpage",level:2},{value:"<code>DashboardPage</code>",id:"dashboardpage",level:2},{value:"<code>ReadyPage</code>",id:"readypage",level:2},{value:"<code>Sider</code>",id:"sider",level:2},{value:"<code>Footer</code>",id:"footer",level:2},{value:"<code>Header</code>",id:"header",level:2},{value:"<code>Layout</code>",id:"layout",level:2},{value:"<code>OffLayoutArea</code>",id:"offlayoutarea",level:2},{value:"<code>Title</code>",id:"title",level:2},{value:"<code>reactQueryClientConfig</code>",id:"reactqueryclientconfig",level:2},{value:"<code>reactQueryDevtoolConfig</code>",id:"reactquerydevtoolconfig",level:3},{value:"<code>notificationConfig</code>",id:"notificationconfig",level:2}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"<Refine>")," component is the entry point of a ",(0,o.kt)("strong",{parentName:"p"},"refine")," app. It is where the highest level of configuration of the app occurs."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/data-provider"},(0,o.kt)("inlineCode",{parentName:"a"},"dataProvider"))," and ",(0,o.kt)("a",{parentName:"p",href:"#routerprovider"},(0,o.kt)("inlineCode",{parentName:"a"},"routerProvider"))," are required to bootstrap the app. After adding them, ",(0,o.kt)("a",{parentName:"p",href:"#resources"},(0,o.kt)("inlineCode",{parentName:"a"},"resources"))," can be added as property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine";\nimport dataProvider from "@pankod/refine-simple-rest";\nimport "@pankod/refine/dist/styles.min.css";\n\nimport { PostList } from "pages/posts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            dataProvider={dataProvider(API_URL)}\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                },\n            ]}\n        />\n    );\n};\n\nexport default App;\n')),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"dataprovider"},(0,o.kt)("inlineCode",{parentName:"h2"},"dataProvider")),(0,o.kt)("div",{className:"required"},"Required"),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("p",null,"A ",(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/data-provider"},(0,o.kt)("inlineCode",{parentName:"a"},"dataProvider"))," is the place where a refine app communicates with an API.\nData providers also act as adapters for refine, making it possible for it to consume different API's and data services.",(0,o.kt)("br",{parentName:"p"}),"\n","A ",(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/data-provider"},(0,o.kt)("inlineCode",{parentName:"a"},"dataProvider"))," makes HTTP requests and returns response data back using predefined methods."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/data-provider"},"Refer to the Data Provider documentation for detailed information. ","\u2192")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"routerprovider"},(0,o.kt)("inlineCode",{parentName:"h2"},"routerProvider")),(0,o.kt)("div",{className:"required"},"Required"),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," needs some router functions to create resource pages, handle navigation, etc. This provider allows you to use the router library you want."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/router-provider"},"Refer to the Router Provider documentation for detailed information. ","\u2192")),(0,o.kt)("h2",{id:"resources"},(0,o.kt)("inlineCode",{parentName:"h2"},"resources")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"resources")," is the main building block of a ",(0,o.kt)("strong",{parentName:"p"},"refine")," app. A resource represents an entity in an endpoint in the API (e.g. ",(0,o.kt)("a",{parentName:"p",href:"https://api.fake-rest.refine.dev/posts"},"https://api.fake-rest.refine.dev/posts"),"). It serves as a bridge between the data from the API and the pages in the app, allowing pages to interact with the data from the API."),(0,o.kt)("p",null,"Here's an app that consumes the ",(0,o.kt)("a",{parentName:"p",href:"https://api.fake-rest.refine.dev/posts"},"https://api.fake-rest.refine.dev/posts")," endpoint as a resource to list multiple items, edit or create an item and show a single item."),(0,o.kt)("p",null,"Page components that are for interacting with the CRUD API operations are passed as a resource element to ",(0,o.kt)("inlineCode",{parentName:"p"},"resources"),"."),(0,o.kt)("br",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine";\nimport dataProvider from "@pankod/refine-json-server";\nimport "@pankod/refine/dist/styles.min.css";\n\nimport { PostList, PostCreate, PostEdit, PostShow } from "pages/posts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            dataProvider={dataProvider(API_URL)}\n            // highlight-start\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                    create: PostCreate,\n                    edit: PostEdit,\n                    show: PostShow,\n                },\n            ]}\n            // highlight-end\n        />\n    );\n};\n\nexport default App;\n')),(0,o.kt)("br",null),(0,o.kt)("p",null,"These components will receive some properties."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="PostList.tsx"',title:'"PostList.tsx"'},"interface IResourceComponentsProps {\n    canCreate?: boolean;\n    canEdit?: boolean;\n    canDelete?: boolean;\n    canShow?: boolean;\n    name: string;\n}\n\nconst PostList: React.FC<IResourceComponentsProps> = (props) => {\n    ...\n}\n")),(0,o.kt)("p",null,"The values of ",(0,o.kt)("inlineCode",{parentName:"p"},"canCreate"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"canEdit")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"canShow")," are determined by whether associated component are passed as an element to ",(0,o.kt)("inlineCode",{parentName:"p"},"resources")," or not.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"canDelete")," are the values passed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources"),"."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This props can be get by using the ",(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/hooks/resource/useResource"},"useResource")," hook.")),(0,o.kt)("h3",{id:"name"},(0,o.kt)("inlineCode",{parentName:"h3"},"name")),(0,o.kt)("div",{className:"required"},"Required"),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("p",null,"A string value that identifies a resource in the API. Interacting with the data in a resource will be done using an endpoint determined by the ",(0,o.kt)("inlineCode",{parentName:"p"},"name"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://api.fake-rest.refine.dev/posts\nhttps://api.fake-rest.refine.dev/posts/1\n")),(0,o.kt)("br",null),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"name")," also determines the routes of the pages of a resource:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"List page -> ",(0,o.kt)("inlineCode",{parentName:"li"},"/posts")),(0,o.kt)("li",{parentName:"ul"},"Create page -> ",(0,o.kt)("inlineCode",{parentName:"li"},"/posts/create")),(0,o.kt)("li",{parentName:"ul"},"Edit page -> ",(0,o.kt)("inlineCode",{parentName:"li"},"/posts/edit/:id")),(0,o.kt)("li",{parentName:"ul"},"Show page -> ",(0,o.kt)("inlineCode",{parentName:"li"},"/posts/show/:id")),(0,o.kt)("li",{parentName:"ul"},"Clone page -> ",(0,o.kt)("inlineCode",{parentName:"li"},"/posts/clone/:id"))),(0,o.kt)("br",null),(0,o.kt)("h3",{id:"list"},(0,o.kt)("inlineCode",{parentName:"h3"},"list")),(0,o.kt)("p",null,"The component passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"list")," prop will be rendered on the ",(0,o.kt)("inlineCode",{parentName:"p"},"/posts")," route."),(0,o.kt)("h3",{id:"create"},(0,o.kt)("inlineCode",{parentName:"h3"},"create")),(0,o.kt)("p",null,"The component passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"create")," will be rendered on the ",(0,o.kt)("inlineCode",{parentName:"p"},"/posts/create")," route by default."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"It will also be rendered on ",(0,o.kt)("inlineCode",{parentName:"p"},"/posts/clone/:id"),". This represents namely a clone page. ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," represent a record and it will be available as a route parameter.",(0,o.kt)("br",{parentName:"p"}),"\n","For example ",(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/hooks/form/useForm#clone-mode"},(0,o.kt)("inlineCode",{parentName:"a"},"useForm")," uses this parameter to create a clone form"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"clone")," from ",(0,o.kt)("inlineCode",{parentName:"p"},"useNavigation")," can be used to navigate to a clone page.")),(0,o.kt)("h3",{id:"edit"},(0,o.kt)("inlineCode",{parentName:"h3"},"edit")),(0,o.kt)("p",null,"The component passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"edit")," will be rendered on the ",(0,o.kt)("inlineCode",{parentName:"p"},"/posts/edit/:id")," route."),(0,o.kt)("h3",{id:"show"},(0,o.kt)("inlineCode",{parentName:"h3"},"show")),(0,o.kt)("p",null,"The component passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"show")," will be rendered on the ",(0,o.kt)("inlineCode",{parentName:"p"},"/posts/show/:id")," route."),(0,o.kt)("h3",{id:"candelete"},(0,o.kt)("inlineCode",{parentName:"h3"},"canDelete")),(0,o.kt)("p",null,"This value will be passed to all CRUD pages defined to as the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources")," element."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"refine"),"'s <",(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/components/basic-views/edit"},"Edit"),"> component uses ",(0,o.kt)("inlineCode",{parentName:"p"},"canDelete")," value to whether show delete button in the edit form or not.")),(0,o.kt)("h3",{id:"icon"},(0,o.kt)("inlineCode",{parentName:"h3"},"icon")),(0,o.kt)("p",null,"An icon element can be passed as properties for the icon in the menu."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"<Refine\n    ...\n    resources={[\n        {\n            ...\n            // highlight-next-line\n            icon: <CustomIcon />\n        },\n    ]}\n/>\n")),(0,o.kt)("h3",{id:"options"},(0,o.kt)("inlineCode",{parentName:"h3"},"options")),(0,o.kt)("p",null,"Menu item name and route on clicking can be customized."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'<Refine\n    ...\n    resources={[\n        {\n            ...\n            // highlight-next-line\n            options: { label: "custom", route: "/custom" }\n        },\n    ]}\n/>\n')),(0,o.kt)("h4",{id:"label"},(0,o.kt)("inlineCode",{parentName:"h4"},"label")),(0,o.kt)("p",null,"Name to show in the menu. Plural form of the resource name is shown by default."),(0,o.kt)("h4",{id:"route"},(0,o.kt)("inlineCode",{parentName:"h4"},"route")),(0,o.kt)("p",null,"Custom route name"),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"authprovider"},(0,o.kt)("inlineCode",{parentName:"h2"},"authProvider")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"authProvider")," handles authentication logic like login, logout flow and checking user credentials. It is an object with methods that refine uses when necessary."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/auth-provider"},"Refer to the Auth Provider documentation for detailed information. ","\u2192")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"i18nprovider"},(0,o.kt)("inlineCode",{parentName:"h2"},"i18nProvider")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"i18nProvider")," property lets you add i18n support to your app. Making you able to use any i18n framework."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/i18n-provider"},"Refer to i18n documentation for detailed information. ","\u2192")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"accesscontrolprovider"},(0,o.kt)("inlineCode",{parentName:"h2"},"accessControlProvider")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"accessControlProvider")," is the entry point for implementing access control for ",(0,o.kt)("strong",{parentName:"p"},"refine")," apps."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/accessControl-provider"},"Refer to access control documentation for detailed information. ","\u2192")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"liveprovider"},(0,o.kt)("inlineCode",{parentName:"h2"},"liveProvider")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," lets you add Realtime support to your app via ",(0,o.kt)("inlineCode",{parentName:"p"},"liveProvider"),". It can be used to update and show data in Realtime throughout your app."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/live-provider"},"Refer to live provider documentation for detailed information. ","\u2192")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"catchall"},(0,o.kt)("inlineCode",{parentName:"h2"},"catchAll")),(0,o.kt)("p",null,"When the app is navigated to a non-existent route, ",(0,o.kt)("strong",{parentName:"p"},"refine")," shows a default error page. A custom error component can be used for this error page by passing the customized component to ",(0,o.kt)("inlineCode",{parentName:"p"},"catchAll")," property:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomErrorPage = () => <div>Page not found</div>;\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            ...\n            // highlight-next-line\n            catchAll={CustomErrorPage}\n        />\n    );\n};\n")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"mutationmode"},(0,o.kt)("inlineCode",{parentName:"h2"},"mutationMode")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"mutationMode")," determines which mode the mutations run with. (e.g. useUpdate, useDelete)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'const App: React.FC = () => {\n    return (\n        <Refine\n            ...\n            // highlight-next-line\n            mutationMode="optimistic"\n        />\n    );\n};\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"pessimistic"),": The mutation runs immediately. Redirection and UI updates are executed after the mutation returns successfuly. This is the default setting."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"optimistic"),": The mutation is applied locally, redirection and UI updates are executed immediately as if the mutation is succesful. If the mutation returns with error, UI updates accordingly."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"undoable"),": The mutation is applied locally, redirection and UI updates are executed immediately as if mutation is succesful. Waits for a customizable amount of timeout before mutation is applied. During the timeout, mutation can be cancelled from the notification with the ?undo? button. UI will revert back accordingly."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/guides-and-concepts/mutation-mode"},"Refer to the Mutation Mode docs for further information. ","\u2192")),(0,o.kt)("h2",{id:"undoabletimeout"},(0,o.kt)("inlineCode",{parentName:"h2"},"undoableTimeout")),(0,o.kt)("p",null,"The duration of the timeout period in ",(0,o.kt)("strong",{parentName:"p"},"undoable")," mode, shown in milliseconds. Mutations can be cancelled during this period. This period can also be set on the supported data hooks.",(0,o.kt)("br",{parentName:"p"}),"\n","The value set in hooks will override the value set with ",(0,o.kt)("inlineCode",{parentName:"p"},"undoableTimeout"),".",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"undoableTimeout")," has a default value of ",(0,o.kt)("inlineCode",{parentName:"p"},"5000"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'const App: React.FC = () => {\n    return (\n        <Refine\n            ...\n            mutationMode="undoable"\n            // highlight-next-line\n            undoableTimeout={3500}\n        />\n    );\n};\n')),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"syncwithlocation"},(0,o.kt)("inlineCode",{parentName:"h2"},"syncWithLocation")),(0,o.kt)("p",null,"List query parameter values can be edited manually by typing directly in the URL. To activate this feature ",(0,o.kt)("inlineCode",{parentName:"p"},"syncWithLocation")," needs to be set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("p",null,"When ",(0,o.kt)("inlineCode",{parentName:"p"},"syncWithLocation")," is active, URL on the listing page shows query parameters like below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"/posts?current=1&pageSize=8&sort[]=createdAt&order[]=desc\n")),(0,o.kt)("p",null,"Users are able to change current page, items count per page, sort and filter parameters."),(0,o.kt)("p",null,"Default value is ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"warnwhenunsavedchanges"},(0,o.kt)("inlineCode",{parentName:"h2"},"warnWhenUnsavedChanges")),(0,o.kt)("p",null,"When you have unsaved changes and try to leave the current page, ",(0,o.kt)("strong",{parentName:"p"},"refine")," shows a confirmation modal box.\nTo activate this feature, set the ",(0,o.kt)("inlineCode",{parentName:"p"},"warnWhenUnsavedChanges")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("br",null),(0,o.kt)("div",{style:{textAlign:"center",backgroundColor:"#efefef",padding:"13px 10px 10px"}},(0,o.kt)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/warnwhen.png"})),(0,o.kt)("br",null),(0,o.kt)("p",null,"Default value is ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"livemode"},(0,o.kt)("inlineCode",{parentName:"h2"},"liveMode")),(0,o.kt)("p",null,"Whether to update data automatically (",(0,o.kt)("inlineCode",{parentName:"p"},"auto"),") or not (",(0,o.kt)("inlineCode",{parentName:"p"},"manual"),") if a related live event is received. The ",(0,o.kt)("inlineCode",{parentName:"p"},"off")," value is used to avoid creating a subscription."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/live-provider#livemode"},"Refer to live provider documentation for detailed information. ","\u2192")),(0,o.kt)("h2",{id:"onliveevent"},(0,o.kt)("inlineCode",{parentName:"h2"},"onLiveEvent")),(0,o.kt)("p",null,"Callback to handle all live events."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/live-provider#refine"},"Refer to live provider documentation for detailed information. ","\u2192")),(0,o.kt)("h2",{id:"configproviderprops"},(0,o.kt)("inlineCode",{parentName:"h2"},"configProviderProps")),(0,o.kt)("p",null,"Ant Design's ",(0,o.kt)("a",{parentName:"p",href:"https://ant.design/components/config-provider"},"ConfigProvider")," which includes default configurations can be changed using ",(0,o.kt)("inlineCode",{parentName:"p"},"configProviderProps"),"."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://ant.design/components/config-provider/#API"},"Props for the Ant Design's ConfigProvider ","\u2192")),(0,o.kt)("p",null,"For example, Layout direction can be set to other way:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'const App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-start\n        configProviderProps={{\n            direction: "rtl",\n        }}\n        // highlight-end\n    />\n);\n')),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"loginpage"},(0,o.kt)("inlineCode",{parentName:"h2"},"LoginPage")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," has a default login page form which is served on ",(0,o.kt)("inlineCode",{parentName:"p"},"/login")," route when the ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider")," configuration is provided."),(0,o.kt)("p",null,"Custom login component can be passed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"LoginPage")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomLoginPage = () => <div> Custom Login Page </div>;\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        LoginPage={CustomLoginPage}\n    />\n);\n")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"dashboardpage"},(0,o.kt)("inlineCode",{parentName:"h2"},"DashboardPage")),(0,o.kt)("p",null,"A custom dashboard page can be passed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"DashboardPage")," prop which is accessible on root route."),(0,o.kt)("p",null,"The dashboard item will appear at the top of the sider menu. If ",(0,o.kt)("inlineCode",{parentName:"p"},"DashboardPage")," is not given, the first resource of ",(0,o.kt)("inlineCode",{parentName:"p"},"resources")," will be shown."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomDashboardPage = () => <div> Custom Dashboard Page </div>;\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        DashboardPage={CustomDashboardPage}\n    />\n);\n")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"readypage"},(0,o.kt)("inlineCode",{parentName:"h2"},"ReadyPage")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," shows a default ready page on root route when no ",(0,o.kt)("inlineCode",{parentName:"p"},"resources")," is passed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Refine>"),"."),(0,o.kt)("p",null,"Custom ready page component can be set by passing to ",(0,o.kt)("inlineCode",{parentName:"p"},"ReadyPage")," property?."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomReadyPage = () => <div> Custom Ready Page </div>;\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        ReadyPage={CustomReadyPage}\n    />\n);\n")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"sider"},(0,o.kt)("inlineCode",{parentName:"h2"},"Sider")),(0,o.kt)("p",null,"The default sidebar can be customized by using refine hooks and passing custom components to ",(0,o.kt)("inlineCode",{parentName:"p"},"Sider")," property."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," uses ",(0,o.kt)("a",{parentName:"p",href:"https://ant.design/components/layout/#Layout.Sider"},"Ant Design Sider")," component by default."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/hooks/resource/useMenu"},"Refer to the useMenu hook documentation for detailed sidebar customization. ","\u2192")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"footer"},(0,o.kt)("inlineCode",{parentName:"h2"},"Footer")),(0,o.kt)("p",null,"The default app footer can be customized by passing the ",(0,o.kt)("inlineCode",{parentName:"p"},"Footer")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomFooter = () => <div>Custom Footer</div>;\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        Footer={CustomFooter}\n    />\n);\n")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"header"},(0,o.kt)("inlineCode",{parentName:"h2"},"Header")),(0,o.kt)("p",null,"The default app header can be customized by passing the ",(0,o.kt)("inlineCode",{parentName:"p"},"Header")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomHeader = () => <div>Custom Header</div>;\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        Header={CustomHeader}\n    />\n);\n")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"layout"},(0,o.kt)("inlineCode",{parentName:"h2"},"Layout")),(0,o.kt)("p",null,"Default layout can be customized by passing the ",(0,o.kt)("inlineCode",{parentName:"p"},"Layout")," property."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," uses ",(0,o.kt)("a",{parentName:"p",href:"https://ant.design/components/layout/"},"Ant Design Layout")," components by default."),(0,o.kt)("p",null,"Layout property will receive individual layout components as property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'const App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-start\n        Layout={({ children, Sider, Footer, Header, OffLayoutArea }) => (\n            <AntdLayout style={{ minHeight: "100vh", flexDirection: "row" }}>\n                <Sider />\n                <AntdLayout>\n                    <Header />\n                    <AntdLayout.Content>\n                        <div style={{ padding: 24, minHeight: 360 }}>\n                            {children}\n                        </div>\n                    </AntdLayout.Content>\n                    <Footer />\n                </AntdLayout>\n                <OffLayoutArea />\n            </AntdLayout>\n        )}\n        // highlight-end\n    />\n);\n')),(0,o.kt)("br",null),(0,o.kt)("p",null,"A completely custom layout can also be implemented instead of the ",(0,o.kt)("strong",{parentName:"p"},"refine"),"'s default ",(0,o.kt)("a",{parentName:"p",href:"https://ant.design/components/layout"},"Ant Design based layout")," like below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'const App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-start\n        Layout={({ children }) => (\n            <div style={{ display: "flex", flexDirection: "column" }}>\n                <div>Custom Layout</div>\n                <div>{children}</div>\n            </div>\n        )}\n        // highlight-end\n    />\n);\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/guides-and-concepts/custom-layout"},"Refer to the Custom Layout documentation for detailed information. ","\u2192")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"children")," will be what is passed as a component for the route in a resource(list, edit..) or a custom route.")),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"offlayoutarea"},(0,o.kt)("inlineCode",{parentName:"h2"},"OffLayoutArea")),(0,o.kt)("p",null,"The component wanted to be placed out of app layout structure can be set by passing to ",(0,o.kt)("inlineCode",{parentName:"p"},"OffLayoutArea")," prop."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'// highlight-next-line\nimport { Refine, BackTop } from "@pankod/refine";\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        OffLayoutArea={() => <BackTop />}\n    />\n);\n')),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"title"},(0,o.kt)("inlineCode",{parentName:"h2"},"Title")),(0,o.kt)("p",null,"The app title can be set by passing the ",(0,o.kt)("inlineCode",{parentName:"p"},"Title")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'// highlight-start\nconst CustomTitle = ({ collapsed }) => (\n    <div>{collapsed ? "Collapsed Title" : "Full Title"}</div>\n);\n// highlight-end\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        Title={CustomTitle}\n    />\n);\n')),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"reactqueryclientconfig"},(0,o.kt)("inlineCode",{parentName:"h2"},"reactQueryClientConfig")),(0,o.kt)("p",null,"Config for React Query client that ",(0,o.kt)("strong",{parentName:"p"},"refine")," uses."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," uses some defaults that applies to all queries:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"{\n    refetchOnWindowFocus: false,\n    keepPreviousData: true,\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://react-query.tanstack.com/reference/QueryClient#queryclient"},"Refer to the QueryClient documentation for detailed information. ","\u2192")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-start\n        reactQueryClientConfig={{\n            defaultOptions: {\n                queries: {\n                    staleTime: Infinity,\n                },\n            },\n        }}\n        // highlight-end\n    />\n);\n")),(0,o.kt)("h3",{id:"reactquerydevtoolconfig"},(0,o.kt)("inlineCode",{parentName:"h3"},"reactQueryDevtoolConfig")),(0,o.kt)("p",null,"Config for customize React Query Devtools."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," uses some defaults that applies to react-query devtool:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'{\n    initialIsOpen: false,\n    position: "bottom-right"\n}\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://react-query.tanstack.com/devtools#options"},"Refer to the Devtools documentation for detailed information. ","\u2192")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{4-7}","{4-7}":!0},'const App: React.FC = () => \n    (\n        <Refine\n            dataProvider={dataProvider(API_URL)}\n            reactQueryDevtoolConfig={{\n                position: "bottom-left",\n                initialIsOpen: true,\n            }}\n        >\n         ...\n        </Refine>\n    );\n')),(0,o.kt)("h2",{id:"notificationconfig"},(0,o.kt)("inlineCode",{parentName:"h2"},"notificationConfig")),(0,o.kt)("p",null,"Config for Ant Design ",(0,o.kt)("a",{parentName:"p",href:"https://ant.design/components/notification/"},"notification")," that ",(0,o.kt)("strong",{parentName:"p"},"refine")," uses."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-start\n        notificationConfig={{\n            placement: "bottomRight",\n            bottom: 40,\n            closeIcon: <CloseOutlined />,\n        }}\n        // highlight-end\n    />\n);\n')))}c.isMDXComponent=!0}}]);