"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[96333],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(r),d=o,h=m["".concat(p,".").concat(d)]||m[d]||c[d]||a;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},85162:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(67294),o=r(86010);const a="tabItem_Ymn6";function i(e){let{children:t,hidden:r,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(a,i),hidden:r},t)}},65488:(e,t,r)=>{r.d(t,{Z:()=>d});var n=r(87462),o=r(67294),a=r(86010),i=r(72389),s=r(67392),p=r(7094),l=r(12466);const u="tabList__CuJ",m="tabItem_LNqP";function c(e){const{lazy:t,block:r,defaultValue:i,values:c,groupId:d,className:h}=e,k=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=c??k.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),g=(0,s.l)(f,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===i?i:i??k.find((e=>e.props.default))?.props.value??k[0].props.value;if(null!==v&&!f.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:P}=(0,p.U)(),[x,R]=(0,o.useState)(v),b=[],{blockElementScrollPositionUntilNextRender:y}=(0,l.o5)();if(null!=d){const e=N[d];null!=e&&e!==x&&f.some((t=>t.value===e))&&R(e)}const C=e=>{const t=e.currentTarget,r=b.indexOf(t),n=f[r].value;n!==x&&(y(t),R(n),null!=d&&P(d,String(n)))},w=e=>{let t=null;switch(e.key){case"Enter":C(e);break;case"ArrowRight":{const r=b.indexOf(e.currentTarget)+1;t=b[r]??b[0];break}case"ArrowLeft":{const r=b.indexOf(e.currentTarget)-1;t=b[r]??b[b.length-1];break}}t?.focus()};return o.createElement("div",{className:(0,a.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":r},h)},f.map((e=>{let{value:t,label:r,attributes:i}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>b.push(e),onKeyDown:w,onClick:C},i,{className:(0,a.Z)("tabs__item",m,i?.className,{"tabs__item--active":x===t})}),r??t)}))),t?(0,o.cloneElement)(k.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function d(e){const t=(0,i.Z)();return o.createElement(c,(0,n.Z)({key:String(t)},e))}},4263:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>m});var n=r(87462),o=(r(67294),r(3905)),a=r(65488),i=r(85162);const s={id:"router-provider",title:"Router Provider"},p=void 0,l={unversionedId:"api-reference/core/providers/router-provider",id:"api-reference/core/providers/router-provider",title:"Router Provider",description:"refine needs some router functions to create resource pages, navigate, etc. This provider allows you to use the router library you want.",source:"@site/docs/api-reference/core/providers/router-provider.md",sourceDirName:"api-reference/core/providers",slug:"/api-reference/core/providers/router-provider",permalink:"/docs/api-reference/core/providers/router-provider",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/api-reference/core/providers/router-provider.md",tags:[],version:"current",lastUpdatedBy:"Daniel Monettelli",lastUpdatedAt:1673291592,formattedLastUpdatedAt:"Jan 9, 2023",frontMatter:{id:"router-provider",title:"Router Provider"},sidebar:"someSidebar",previous:{title:"Notification Provider",permalink:"/docs/api-reference/core/providers/notification-provider"},next:{title:"useCan",permalink:"/docs/api-reference/core/hooks/accessControl/useCan"}},u={},m=[{value:"Usage",id:"usage",level:2},{value:"Creating a router provider",id:"creating-a-router-provider",level:2},{value:"<code>useHistory</code>",id:"usehistory",level:3},{value:"<code>useLocation</code>",id:"uselocation",level:3},{value:"<code>useParams</code>",id:"useparams",level:3},{value:"<code>Prompt</code>",id:"prompt",level:3},{value:"<code>Link</code>",id:"link",level:3},{value:"<code>routes</code>",id:"routes",level:3},{value:"<code>RouterComponent</code>",id:"routercomponent",level:3},{value:"Serving the application from a subdirectory",id:"serving-the-application-from-a-subdirectory",level:2},{value:"Changing the initial route of your application",id:"changing-the-initial-route-of-your-application",level:2}],c={toc:m};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," needs some router functions to create resource pages, navigate, etc. This provider allows you to use the router library you want."),(0,o.kt)("p",null,"A router provider must include the following methods:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const routerProvider = {\n    useHistory: () => {\n        push: (...args) => any,\n        replace: (...args) => any,\n        goBack: (...args) => any,\n    },\n    useLocation: () => {\n        pathname: string,\n        search: string,\n    },\n    useParams: <Params extends { [K in keyof Params]?: string } = {}>() => Params,\n    Prompt: React.FC<PromptProps*>,\n    Link: React.FC<any>,\n    RouterComponent?: React.FC<any>,\n};\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"*"),": Too see ","\u2192"," ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/interfaceReferences#promptprops"},(0,o.kt)("inlineCode",{parentName:"a"},"<PromptProps>")))),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"refine")," includes many out-of-the-box router providers to use in your projects like"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/react-router-v6"},"React Router V6")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/react-router"},"React Router V5")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/react-location"},"React Location")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/nextjs-router"},"Next.js Router")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/remix"},"Remix Router")))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"We do not recommend creating this provider unless you do not need any customization on the router. Instead, you can use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/nextjs-router"},"Next.js Router")," for your ",(0,o.kt)("a",{parentName:"p",href:"https://nextjs.org/"},"Next.js")," app and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/react-router-v6"},"React Router V6"),", ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/react-router"},"React Router V5")," or ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/react-location"},"React Location")," for your ",(0,o.kt)("a",{parentName:"p",href:"https://en.reactjs.org/"},"react")," app.")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"To activate router provider in ",(0,o.kt)("strong",{parentName:"p"},"refine"),", we have to pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"routerProvider")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Refine />")," component."),(0,o.kt)(a.Z,{defaultValue:"react-router-v6",values:[{label:"React Router V6",value:"react-router-v6"},{label:"React Router V5",value:"react-router"},{label:"React Location",value:"react-location"},{label:"Next.js Router",value:"nextjs"},{label:"Remix Router",value:"remix"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"react-router-v6",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine-core";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nconst App: React.FC = () => {\n    return <Refine routerProvider={routerProvider} />;\n};\n'))),(0,o.kt)(i.Z,{value:"react-router",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine-core";\nimport routerProvider from "@pankod/refine-react-router-v5";\n\nconst App: React.FC = () => {\n    return <Refine routerProvider={routerProvider} />;\n};\n'))),(0,o.kt)(i.Z,{value:"react-location",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine-core";\nimport routerProvider from "@pankod/refine-react-location";\n\nconst App: React.FC = () => {\n    return <Refine routerProvider={routerProvider} />;\n};\n'))),(0,o.kt)(i.Z,{value:"nextjs",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="pages/_app.tsx"',title:'"pages/_app.tsx"'},'import { Refine } from "@pankod/refine-core";\nimport routerProvider from "@pankod/refine-nextjs-router";\nimport { AppProps } from "next/app";\n\nfunction MyApp({ Component, pageProps }: AppProps): JSX.Element {\n    return (\n        <Refine routerProvider={routerProvider}>\n            <Component {...pageProps} />\n        </Refine>\n    );\n}\n'))),(0,o.kt)(i.Z,{value:"remix",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="app/root.tsx"',title:'"app/root.tsx"'},'import type { MetaFunction } from "@remix-run/node";\nimport {\n    Links,\n    LiveReload,\n    Meta,\n    Outlet,\n    Scripts,\n    ScrollRestoration,\n} from "@remix-run/react";\nimport { Refine } from "@pankod/refine-core";\nimport routerProvider from "@pankod/refine-remix-router";\n\nexport const meta: MetaFunction = () => ({\n    charset: "utf-8",\n    title: "New Remix + Refine App",\n    viewport: "width=device-width,initial-scale=1",\n});\n\nexport default function App() {\n    return (\n        <html lang="en">\n            <head>\n                <Meta />\n                <Links />\n            </head>\n            <body>\n                <Refine routerProvider={routerProvider}>\n                    <Outlet />\n                </Refine>\n                <ScrollRestoration />\n                <Scripts />\n                <LiveReload />\n            </body>\n        </html>\n    );\n}\n')))),(0,o.kt)("h2",{id:"creating-a-router-provider"},"Creating a router provider"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"routerProvider")," methods ",(0,o.kt)("strong",{parentName:"p"},"refine")," expects are exactly the same as ",(0,o.kt)("a",{parentName:"p",href:"https://reactrouter.com"},"React Router V6")," methods."),(0,o.kt)("p",null,"To understand how to create a ",(0,o.kt)("inlineCode",{parentName:"p"},"routerProvider"),", let's examine how the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/react-router-v6"},"React Router V6"),", ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/react-router"},"React Router V5"),", ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/react-location"},"React Location")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/nextjs-router"},"Next.js Router")," libraries provided by ",(0,o.kt)("strong",{parentName:"p"},"refine")," create a ",(0,o.kt)("inlineCode",{parentName:"p"},"routerProvider"),"."),(0,o.kt)("h3",{id:"usehistory"},(0,o.kt)("inlineCode",{parentName:"h3"},"useHistory")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," uses ",(0,o.kt)("inlineCode",{parentName:"p"},"push"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"replace"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"goBack")," functions of ",(0,o.kt)("inlineCode",{parentName:"p"},"useHistory")," for navigation."),(0,o.kt)(a.Z,{defaultValue:"react-useHistory-v6",values:[{label:"React Router V6",value:"react-useHistory-v6"},{label:"React Router V5",value:"react-useHistory"},{label:"React Location",value:"react-location-useHistory"},{label:"Next.js Router",value:"nextjs-useHistory"},{label:"Remix Router",value:"remix-useHistory"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"react-useHistory-v6",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-start\n    useHistory: () => {\n        const navigate = useNavigate();\n\n        return {\n            push: navigate,\n            replace: (path: string) => {\n                navigate(path, { replace: true });\n            },\n            goBack: () => {\n                navigate(-1);\n            },\n        };\n    },\n// highlight-end\n\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"react-useHistory",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useHistory } from "react-router-dom";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    useHistory,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"react-location-useHistory",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useHistory, useLocation } from "react-location";\n\nconst routerProvider: IRouterProvider = {\n    ...\n    // highlight-start\n    useHistory: () => {\n        const navigate = useNavigate();\n        const location = useLocation();\n\n        return {\n            push: (path: string) => {\n                navigate({\n                    to: path,\n                });\n            },\n            replace: (path: string) => {\n                navigate({\n                    to: path,\n                    replace: true,\n                });\n            },\n            goBack: () => {\n                location.history.back();\n            },\n        };\n    },\n    // highlight-end\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"nextjs-useHistory",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useRouter } from "next/router";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-start\n    useHistory: () => {\n        const router = useRouter();\n        const { push, replace, back } = router;\n        return {\n            push,\n            replace,\n            goBack: back,\n        };\n    },\n// highlight-end\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"remix-useHistory",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useNavigate } from "@remix-run/react";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-start\n    useHistory: () => {\n        const navigate = useNavigate();\n\n        return {\n            push: navigate,\n            replace: (path: string) => {\n                navigate(path, { replace: true });\n            },\n            goBack: () => {\n                navigate(-1);\n            },\n        };\n    },\n// highlight-end\n    ...\n};\n')))),(0,o.kt)("h3",{id:"uselocation"},(0,o.kt)("inlineCode",{parentName:"h3"},"useLocation")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"pathname")," to find the location of the user and ",(0,o.kt)("inlineCode",{parentName:"p"},"search")," to find the query string."),(0,o.kt)(a.Z,{defaultValue:"react-useLocation-v6",values:[{label:"React Router V6",value:"react-useLocation-v6"},{label:"React Router V5",value:"react-useLocation"},{label:"React Location",value:"react-location-useLocation"},{label:"Next.js Router",value:"nextjs-useLocation"},{label:"Remix Router",value:"remix-useLocation"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"react-useLocation-v6",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useLocation } from "react-router-dom";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    useLocation,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"react-useLocation",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useLocation } from "react-router-dom";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    useLocation,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"react-location-useLocation",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useLocation } from "react-location";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-start\n    useLocation: () => {\n        const location = useLocation();\n        return {\n            pathname: location.current.pathname,\n            search: location.current.searchStr,\n        };\n    },\n// highlight-end\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"nextjs-useLocation",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-start\nimport { useRouter } from "next/router";\nimport qs from "qs";\n// highlight-end\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-start\n    useLocation: () => {\n        const router = useRouter();\n        const { pathname, query } = router;\n\n        const queryParams = qs.stringify(query);\n\n        return {\n            pathname,\n            search: queryParams && `?${queryParams}`,\n        };\n    },\n// highlight-end\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"remix-useLocation",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-start\nimport { useLocation } from "@remix-run/react";\n// highlight-end\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-start\n    useLocation: () => {\n        const location = useLocation();\n\n        return location;\n    },\n// highlight-end\n    ...\n};\n')))),(0,o.kt)("h3",{id:"useparams"},(0,o.kt)("inlineCode",{parentName:"h3"},"useParams")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," uses ",(0,o.kt)("inlineCode",{parentName:"p"},"useParams")," to use action name, record id, etc. found in the route."),(0,o.kt)(a.Z,{defaultValue:"react-router-v6-useParams",values:[{label:"React Router V6",value:"react-router-v6-useParams"},{label:"React Router V5",value:"react-router-v5-useParams"},{label:"React Location",value:"react-location-useParams"},{label:"Next.js Router",value:"nextjs-useParams"},{label:"Remix Router",value:"remix-useParams"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"react-router-v6-useParams",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useParams } from "react-router-dom";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    useParams,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"react-router-v5-useParams",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useParams } from "react-router-dom";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    useParams,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"react-location-useParams",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useMatch } from "react-location";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-start\n    useParams: () => {\n        const { params } = useMatch();\n\n        return params as any;\n    },\n// highlight-end\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"nextjs-useParams",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useRouter } from "next/router";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-start\n    useParams: <Params>() => {\n        const router = useRouter();\n\n        const { query } = router;\n        return query as unknown as Params;\n    },\n// highlight-end\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"remix-useParams",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { handleUseParams, IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { useParams } from "@remix-run/react";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-start\n    useParams: () => {\n        const params = useParams();\n        return handleUseParams(params);\n    },\n// highlight-end\n    ...\n};\n')))),(0,o.kt)("h3",{id:"prompt"},(0,o.kt)("inlineCode",{parentName:"h3"},"Prompt")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," uses ",(0,o.kt)("inlineCode",{parentName:"p"},"<Prompt>")," to display the alert when ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/components/refine-config#warnwhenunsavedchanges"},"warnWhenUnsavedChanges")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)(a.Z,{defaultValue:"react--router-v6-prompt",values:[{label:"React Router V6",value:"react--router-v6-prompt"},{label:"React Router V5",value:"react--router-v5-prompt"},{label:"React Location",value:"react-location-prompt"},{label:"Next.js Router",value:"nextjs-prompt"},{label:"Remix Router",value:"remix-prompt"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"react--router-v6-prompt",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Prompt.tsx"',title:'"Prompt.tsx"'},'// highlight-start\nimport { useEffect, useContext } from "react";\nimport { UNSAFE_NavigationContext as NavigationContext } from "react-router-dom";\nimport type { History } from "history";\n// highlight-end\n\nimport type { PromptProps } from "@pankod/refine-core";\n\nexport const Prompt: React.FC<PromptProps> = ({\n    message,\n    when,\n    setWarnWhen,\n}) => {\n    const navigator = useContext(NavigationContext).navigator as History;\n\n    useEffect(() => {\n        if (!when) return;\n\n        const unblock = navigator.block((transition: any) => {\n            if (window.confirm(message)) {\n                setWarnWhen?.(false);\n                unblock();\n                transition.retry();\n            } else {\n                navigator.location.pathname = window.location.pathname;\n            }\n        });\n        return unblock;\n    }, [when, location, message]);\n\n    return null;\n};\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n\n// highlight-next-line\nimport { Prompt } from "./prompt";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    Prompt,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"react--router-v5-prompt",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { Prompt } from "react-router-dom";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    Prompt: Prompt as any,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"react-location-prompt",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Prompt.tsx"',title:'"Prompt.tsx"'},'import { useEffect } from "react";\n// highlight-next-line\nimport { useLocation } from "react-location";\n\nimport type { PromptProps } from "@pankod/refine-core";\n\nexport const Prompt: React.FC<PromptProps> = ({\n    message,\n    when,\n    setWarnWhen,\n}) => {\n    const location = useLocation();\n\n    useEffect(() => {\n        if (!when) return;\n\n        const unblock = location.history.block((transition) => {\n            if (window.confirm(message)) {\n                setWarnWhen?.(false);\n                unblock();\n                transition.retry();\n            } else {\n                location.current.pathname = window.location.pathname;\n            }\n        });\n        return unblock;\n    }, [when, location, message]);\n\n    return null;\n};\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n\n// highlight-next-line\nimport { Prompt } from "./prompt";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    Prompt,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"nextjs-prompt",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="prompt.tsx"',title:'"prompt.tsx"'},'import { useRouter } from "next/router";\nimport { useEffect } from "react";\n\nimport type { PromptProps } from "@pankod/refine-core";\n\nexport const Prompt: React.FC<PromptProps> = ({\n    message,\n    when,\n    setWarnWhen,\n}) => {\n    const router = useRouter();\n\n    useEffect(() => {\n        const routeChangeStart = () => {\n            if (when) {\n                const allowTransition = window.confirm(message);\n                if (allowTransition) {\n                    setWarnWhen?.(false);\n                } else {\n                    router.events.emit("routeChangeError");\n                    throw "Abort route change due to unsaved changes prompt. Ignore this error.";\n                }\n            }\n        };\n        router.events.on("routeChangeStart", routeChangeStart);\n\n        return () => router.events.off("routeChangeStart", routeChangeStart);\n    }, [when]);\n    return null;\n};\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n\n// highlight-next-line\nimport { Prompt } from "./prompt";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    Prompt,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"remix-prompt",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="prompt.tsx"',title:'"prompt.tsx"'},'import { useEffect, useContext } from "react";\nimport { UNSAFE_NavigationContext as NavigationContext } from "react-router-dom";\nimport type { History } from "history";\n\nimport type { PromptProps } from "@pankod/refine-core";\n\nexport const Prompt: React.FC<PromptProps> = ({\n    message,\n    when,\n    setWarnWhen,\n}) => {\n    const navigator = useContext(NavigationContext).navigator as History;\n\n    useEffect(() => {\n        if (!when) return;\n\n        const unblock = navigator.block((transition: any) => {\n            if (window.confirm(message)) {\n                setWarnWhen?.(false);\n                unblock();\n                transition.retry();\n            } else {\n                navigator.location.pathname = window.location.pathname;\n            }\n        });\n        return unblock;\n    }, [when, message]);\n\n    return null;\n};\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n\n// highlight-next-line\nimport { Prompt } from "./prompt";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    Prompt,\n    ...\n};\n')))),(0,o.kt)("h3",{id:"link"},(0,o.kt)("inlineCode",{parentName:"h3"},"Link")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," uses ",(0,o.kt)("inlineCode",{parentName:"p"},"<Link>")," for navigation."),(0,o.kt)(a.Z,{defaultValue:"react-router-v6-link",values:[{label:"React Router V6",value:"react-router-v6-link"},{label:"React Router V5",value:"react-router-v5-link"},{label:"React Location",value:"react-location-link"},{label:"Next.js Router",value:"nextjs-link"},{label:"Remix Router",value:"remix-link"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"react-router-v6-link",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { Link } from "react-router-dom";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    Link,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"react-router-v5-link",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { Link } from "react-router-dom";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    Link,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"react-location-link",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { Link } from "react-location";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    Link,\n    ...\n};\n'))),(0,o.kt)(i.Z,{value:"nextjs-link",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="RefineLink.tsx"',title:'"RefineLink.tsx"'},'import React from "react";\nimport Link, { LinkProps } from "next/link";\n\ntype MakeOptional<Type, Key extends keyof Type> = Omit<Type, Key> &\n    Partial<Pick<Type, Key>>;\n\ntype RefineLinkProps =\n    | (MakeOptional<LinkProps, "href"> & {\n          to: LinkProps["href"];\n      })\n    | LinkProps;\n\nexport const RefineLink: React.FC<RefineLinkProps> = ({\n    children,\n    ...props\n}) => (\n    <Link\n        href={"to" in props ? props.to : props.href}\n        legacyBehavior={false}\n        {...props}\n    >\n        {children}\n    </Link>\n);\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n\n// highlight-start\nimport { RefineLink } from "./refineLink";\n\nconst routerProvider: IRouterProvider = {\n    ...\n    // highlight-next-line\n    Link: RefineLink,\n    ...\n};\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"We use ",(0,o.kt)("inlineCode",{parentName:"p"},"<WrapperLink>")," instead of using ",(0,o.kt)("inlineCode",{parentName:"p"},"<Link>")," directly because ",(0,o.kt)("strong",{parentName:"p"},"refine")," uses ",(0,o.kt)("inlineCode",{parentName:"p"},"<Link>")," component with ",(0,o.kt)("inlineCode",{parentName:"p"},"to")," prop in its packages. So ",(0,o.kt)("inlineCode",{parentName:"p"},"<WrapperLink>")," maps ",(0,o.kt)("inlineCode",{parentName:"p"},"to")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"href")," prop."),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-nextjs-router")," uses ",(0,o.kt)("inlineCode",{parentName:"p"},"<Link/>")," component with ",(0,o.kt)("inlineCode",{parentName:"p"},"legacyBehavior")," prop set to ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," by default to comply with the new ",(0,o.kt)("inlineCode",{parentName:"p"},"<Link/>")," behavior of Next.js which is currently under ",(0,o.kt)("inlineCode",{parentName:"p"},"experimental")," flag but soon to be the default behavior with Next.js 13."),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/vercel/next.js/pull/36436"},"To learn more about the changing behavior of ",(0,o.kt)("inlineCode",{parentName:"a"},"<Link/>")," check out this PR")))),(0,o.kt)(i.Z,{value:"remix-link",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routerProvider.ts"',title:'"routerProvider.ts"'},'import { IRouterProvider } from "@pankod/refine-core";\n// highlight-next-line\nimport { Link } from "@remix-run/react";\n\nconst routerProvider: IRouterProvider = {\n    ...\n// highlight-next-line\n    Link,\n    ...\n};\n')))),(0,o.kt)("h3",{id:"routes"},(0,o.kt)("inlineCode",{parentName:"h3"},"routes")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"routes")," allow us to create custom pages in your ",(0,o.kt)("strong",{parentName:"p"},"react")," apps that have different paths than those defined by ",(0,o.kt)("inlineCode",{parentName:"p"},"resources"),"."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/advanced-tutorials/custom-pages"},"Refer to the Custom Pages documentation for detailed information. ","\u2192")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Since ",(0,o.kt)("strong",{parentName:"p"},"Nextjs")," and ",(0,o.kt)("strong",{parentName:"p"},"Remix")," has a file system based router built on the page concept, you can create your custom pages under the pages folder you don't need ",(0,o.kt)("inlineCode",{parentName:"p"},"routes")," property.")),(0,o.kt)("h3",{id:"routercomponent"},(0,o.kt)("inlineCode",{parentName:"h3"},"RouterComponent")),(0,o.kt)("p",null,"It creates the navigation routes of the ",(0,o.kt)("strong",{parentName:"p"},"refine")," app and determines how the components will be rendered on which paths."),(0,o.kt)("p",null,"In general, we can list what it does as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"It creates create, edit, list, show pages with paths according to the resources' own name."),(0,o.kt)("li",{parentName:"ul"},"Allows rendering of custom ",(0,o.kt)("a",{parentName:"li",href:"#routes"},(0,o.kt)("inlineCode",{parentName:"a"},"routes"))," passed to ",(0,o.kt)("inlineCode",{parentName:"li"},"routerProviders")," as properties."),(0,o.kt)("li",{parentName:"ul"},"Different routes render when the user is authenticated and not.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"RouterComponent")," is required for ",(0,o.kt)("strong",{parentName:"p"},"refine")," React apps but not required for Next.js and Remix apps."),(0,o.kt)("p",{parentName:"admonition"},"Since Next.js and Remix has a folder base route structure, it is used by exporting the ",(0,o.kt)("inlineCode",{parentName:"p"},"<NextRouteComponent>")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"<RemixRouteComponent>")," from the created page.")),(0,o.kt)("br",null),(0,o.kt)("p",null,"\u2192"," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/react-router-v6/src/routerComponent.tsx"},"Refer to the React Router V6's ",(0,o.kt)("inlineCode",{parentName:"a"},"<RouterComponent>")," for detailed usage information."),(0,o.kt)("br",{parentName:"p"}),"\n","\u2192"," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/react-router/src/routerComponent.tsx"},"Refer to the React Router V5's ",(0,o.kt)("inlineCode",{parentName:"a"},"<RouterComponent>")," for detailed usage information."),(0,o.kt)("br",{parentName:"p"}),"\n","\u2192"," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/react-location/src/routerComponent.tsx"},"Refer to the React Location's ",(0,o.kt)("inlineCode",{parentName:"a"},"<RouterComponent>")," for detailed usage information."),(0,o.kt)("br",{parentName:"p"}),"\n","\u2192"," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/nextjs-router/src/nextRouteComponent.tsx"},"Refer to the Next.js Router's ",(0,o.kt)("inlineCode",{parentName:"a"},"<NextRouteComponent>")," for detailed usage information."),"\n","\u2192"," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/remix/src/routeComponent.tsx"},"Refer to the Next.js Router's ",(0,o.kt)("inlineCode",{parentName:"a"},"<RemixRouteComponent>")," for detailed usage information.")),(0,o.kt)("h2",{id:"serving-the-application-from-a-subdirectory"},"Serving the application from a subdirectory"),(0,o.kt)(a.Z,{defaultValue:"react-router-v6-subdirectory",values:[{label:"React Router V6",value:"react-router-v6-subdirectory"},{label:"React Router V5",value:"react-router-v5-subdirectory"},{label:"React Location",value:"react-location-subdirectory"},{label:"Next.js",value:"nextjs-subdirectory"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"react-router-v6-subdirectory",mdxType:"TabItem"},(0,o.kt)("p",null,"If you want to serve from a subdirectory in your ",(0,o.kt)("strong",{parentName:"p"},"refine")," react app. You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"basename")," property of ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/react-router-v6/src/routerComponent.tsx"},(0,o.kt)("inlineCode",{parentName:"a"},"<BrowserRouter>")),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/react-router/src/routerComponent.tsx"},(0,o.kt)("inlineCode",{parentName:"a"},"<RouterComponent>"))," in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/react-router-v6"},"react-router-v6")," package passes all its properties to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/react-router-v6/src/routerComponent.tsx"},(0,o.kt)("inlineCode",{parentName:"a"},"<BrowserRouter>"))," component. Therefore, a ",(0,o.kt)("inlineCode",{parentName:"p"},"<BrowserRouter>")," property that we will give to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<RouterComponent>")," is passed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<BrowserRouter>")," that wraps our application."),(0,o.kt)("p",null,"In the example below you can see how to serve the application in a subdirectory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/App.tsx"',title:'"src/App.tsx"'},'import { Refine } from "@pankod/refine-core";\n// highlight-next-line\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\nimport "@pankod/refine/dist/styles.min.css";\n\nimport { PostList, PostCreate, PostEdit, PostShow } from "pages/posts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst { RouterComponent } = routerProvider;\n\n// highlight-next-line\nconst CustomRouterComponent = () => <RouterComponent basename="/admin" />;\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            // highlight-start\n            routerProvider={{\n                ...routerProvider,\n                RouterComponent: CustomRouterComponent,\n            }}\n            // highlight-end\n            dataProvider={dataProvider(API_URL)}\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                    create: PostCreate,\n                    edit: PostEdit,\n                    show: PostShow,\n                },\n            ]}\n        />\n    );\n};\n\nexport default App;\n')),(0,o.kt)("p",null,"Now you can access our application at ",(0,o.kt)("inlineCode",{parentName:"p"},"www.domain.com/admin"),".")),(0,o.kt)(i.Z,{value:"react-router-v5-subdirectory",mdxType:"TabItem"},(0,o.kt)("p",null,"If you want to serve from a subdirectory in your ",(0,o.kt)("strong",{parentName:"p"},"refine")," react app. You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"basename")," property of ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/react-router-v6/src/routerComponent.tsx"},(0,o.kt)("inlineCode",{parentName:"a"},"<BrowserRouter>")),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/react-router/src/routerComponent.tsx"},(0,o.kt)("inlineCode",{parentName:"a"},"<RouterComponent>"))," in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/react-router"},"react-router-v5")," package passes all its properties to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/react-router-v6/src/routerComponent.tsx"},(0,o.kt)("inlineCode",{parentName:"a"},"<BrowserRouter>"))," component. Therefore, a ",(0,o.kt)("inlineCode",{parentName:"p"},"<BrowserRouter>")," property that we will give to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<RouterComponent>")," is passed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<BrowserRouter>")," that wraps our application."),(0,o.kt)("p",null,"In the example below you can see how to serve the application in a subdirectory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/App.tsx"',title:'"src/App.tsx"'},'import { Refine } from "@pankod/refine-core";\n// highlight-next-line\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\nimport "@pankod/refine/dist/styles.min.css";\n\nimport { PostList, PostCreate, PostEdit, PostShow } from "pages/posts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst { RouterComponent } = routerProvider;\n\n// highlight-next-line\nconst CustomRouterComponent = () => <RouterComponent basename="/admin" />;\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            // highlight-start\n            routerProvider={{\n                ...routerProvider,\n                RouterComponent: CustomRouterComponent,\n            }}\n            // highlight-end\n            dataProvider={dataProvider(API_URL)}\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                    create: PostCreate,\n                    edit: PostEdit,\n                    show: PostShow,\n                },\n            ]}\n        />\n    );\n};\n\nexport default App;\n')),(0,o.kt)("p",null,"Now you can access our application at ",(0,o.kt)("inlineCode",{parentName:"p"},"www.domain.com/admin"),".")),(0,o.kt)(i.Z,{value:"react-location-subdirectory",mdxType:"TabItem"},(0,o.kt)("p",null,"If you want to serve from a subdirectory in your ",(0,o.kt)("strong",{parentName:"p"},"refine")," react app. You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"basepath")," property of ",(0,o.kt)("a",{parentName:"p",href:"https://react-location.tanstack.com/docs/api#router"},(0,o.kt)("inlineCode",{parentName:"a"},"<Router>")),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/blob/master/packages/react-router/src/routerComponent.tsx"},(0,o.kt)("inlineCode",{parentName:"a"},"<RouterComponent>"))," in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/react-location"},"react-location")," package passes all its properties to the ",(0,o.kt)("a",{parentName:"p",href:"https://react-location.tanstack.com/docs/api#router"},(0,o.kt)("inlineCode",{parentName:"a"},"<Router>"))," component. Therefore, a ",(0,o.kt)("inlineCode",{parentName:"p"},"<Router>")," property that we will give to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<RouterComponent>")," is passed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Router>")," that wraps our application."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Using ",(0,o.kt)("inlineCode",{parentName:"p"},"basepath")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"react-location")," causes some problems and as the development of ",(0,o.kt)("inlineCode",{parentName:"p"},"react-location")," is discontinued it's unlikely to be fixed. Please see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/issues/3207"},"here")," for more information and a workaround.")),(0,o.kt)("p",null,"In the example below you can see how to serve the application in a subdirectory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/App.tsx"',title:'"src/App.tsx"'},'import { Refine } from "@pankod/refine-core";\n// highlight-next-line\nimport routerProvider from "@pankod/refine-react-location";\nimport dataProvider from "@pankod/refine-simple-rest";\nimport "@pankod/refine/dist/styles.min.css";\n\nimport { PostList, PostCreate, PostEdit, PostShow } from "pages/posts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst { RouterComponent, location } = routerProvider;\n\n// highlight-start\nconst CustomRouterComponent = () => (\n    <RouterComponent location={location} basepath="/admin" />\n);\n// highlight-end\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            // highlight-start\n            routerProvider={{\n                ...routerProvider,\n                RouterComponent: CustomRouterComponent,\n            }}\n            // highlight-end\n            dataProvider={dataProvider(API_URL)}\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                    create: PostCreate,\n                    edit: PostEdit,\n                    show: PostShow,\n                },\n            ]}\n        />\n    );\n};\n\nexport default App;\n')),(0,o.kt)("p",null,"Now you can access our application at ",(0,o.kt)("inlineCode",{parentName:"p"},"www.domain.com/admin"),".")),(0,o.kt)(i.Z,{value:"nextjs-subdirectory",mdxType:"TabItem"},(0,o.kt)("p",null,"To serve your application from a subdirectory in your ",(0,o.kt)("strong",{parentName:"p"},"refine")," Nextjs application, simply add ",(0,o.kt)("inlineCode",{parentName:"p"},"basePath")," to your ",(0,o.kt)("inlineCode",{parentName:"p"},"next.config.js")," file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'module.exports = {\n    basePath: "/admin",\n};\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://nextjs.org/docs/api-reference/next.config.js/basepath"},"Refer to the ",(0,o.kt)("inlineCode",{parentName:"a"},"Nextjs")," documentation for detailed usage information. ","\u2192")),(0,o.kt)("p",null,"Now you can access our application at ",(0,o.kt)("inlineCode",{parentName:"p"},"www.domain.com/admin"),"."))),(0,o.kt)("h2",{id:"changing-the-initial-route-of-your-application"},"Changing the initial route of your application"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," initially shows the ",(0,o.kt)("inlineCode",{parentName:"p"},"DashboardPage")," component from ",(0,o.kt)("inlineCode",{parentName:"p"},"<Refine/>")," props, if there are no ",(0,o.kt)("inlineCode",{parentName:"p"},"DashboardPage")," component is present, ",(0,o.kt)("strong",{parentName:"p"},"refine")," redirects to the first ",(0,o.kt)("inlineCode",{parentName:"p"},"list")," page in the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources")," array. You can change this behavior by passing ",(0,o.kt)("inlineCode",{parentName:"p"},"initialRoute")," value to the ",(0,o.kt)("inlineCode",{parentName:"p"},"RouterComponent"),"s of the router providers."),(0,o.kt)(a.Z,{defaultValue:"react-router-v6-initial-route",values:[{label:"React Router V6",value:"react-router-v6-initial-route"},{label:"React Location",value:"react-location-initial-route"},{label:"Next.js",value:"nextjs-initial-route"},{label:"Remix",value:"remix-initial-route"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"react-router-v6-initial-route",mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"RouterComponent")," property in the ",(0,o.kt)("inlineCode",{parentName:"p"},"routerProvider")," from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-react-router-v6")," checks for the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialRoute")," property in its context. If it is present, it will redirect to the given route. By default ",(0,o.kt)("inlineCode",{parentName:"p"},"routerProvider")," is using ",(0,o.kt)("inlineCode",{parentName:"p"},"BrowserRouterComponent")," but both ",(0,o.kt)("inlineCode",{parentName:"p"},"HashRouterComponent")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MemoryRouterComponent")," also supports ",(0,o.kt)("inlineCode",{parentName:"p"},"initialRoute")," property."),(0,o.kt)("p",null,"In the example below, ",(0,o.kt)("inlineCode",{parentName:"p"},"BrowserRouterComponent")," is used and the initial route is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"/users"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/App.tsx"',title:'"src/App.tsx"'},'import { Refine } from "@pankod/refine-core";\n// highlight-start\nimport routerProvider, {\n    BrowserRouterComponent,\n} from "@pankod/refine-react-router-v6";\n// highlight-end\nimport dataProvider from "@pankod/refine-simple-rest";\nimport "@pankod/refine/dist/styles.min.css";\n\nimport { PostList, PostCreate, PostEdit, PostShow } from "pages/posts";\nimport { UserList, UserShow } from "pages/users";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            routerProvider={{\n                ...routerProvider,\n                // highlight-start\n                RouterComponent: BrowserRouterComponent.bind({\n                    initialRoute: "/users",\n                }),\n                // highlight-end\n            }}\n            dataProvider={dataProvider(API_URL)}\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                    create: PostCreate,\n                    edit: PostEdit,\n                    show: PostShow,\n                },\n                {\n                    name: "users",\n                    list: UserList,\n                    show: UserShow,\n                },\n            ]}\n        />\n    );\n};\n\nexport default App;\n'))),(0,o.kt)(i.Z,{value:"react-location-initial-route",mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"RouterComponent")," property in the ",(0,o.kt)("inlineCode",{parentName:"p"},"routerProvider")," from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-location")," checks for the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialRoute")," property in its context. If it is present, it will redirect to the given route."),(0,o.kt)("p",null,"In the example below, you can see how the initial route is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"/users"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/App.tsx"',title:'"src/App.tsx"'},'import { Refine } from "@pankod/refine-core";\n// highlight-next-line\nimport routerProvider from "@pankod/refine-react-location";\nimport dataProvider from "@pankod/refine-simple-rest";\nimport "@pankod/refine/dist/styles.min.css";\n\nimport { PostList, PostCreate, PostEdit, PostShow } from "pages/posts";\nimport { UserList, UserShow } from "pages/users";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            routerProvider={{\n                ...routerProvider,\n                // highlight-start\n                RouterComponent: routerProvider.RouterComponent.bind({\n                    initialRoute: "/users",\n                }),\n                // highlight-end\n            }}\n            dataProvider={dataProvider(API_URL)}\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                    create: PostCreate,\n                    edit: PostEdit,\n                    show: PostShow,\n                },\n                {\n                    name: "users",\n                    list: UserList,\n                    show: UserShow,\n                },\n            ]}\n        />\n    );\n};\n\nexport default App;\n'))),(0,o.kt)(i.Z,{value:"nextjs-initial-route",mdxType:"TabItem"},(0,o.kt)("p",null,"Since Next.js uses file system based routing, instead of the ",(0,o.kt)("inlineCode",{parentName:"p"},"routerProvider")," prop of ",(0,o.kt)("inlineCode",{parentName:"p"},"<Refine/>"),", you should pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialRoute")," property to the context of the ",(0,o.kt)("inlineCode",{parentName:"p"},"NextRouteComponent")," from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-nextjs-router"),"."),(0,o.kt)("p",null,"In the example below, the initial route is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"/users"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="pages/[[...refine]].tsx"',title:'"pages/[[...refine]].tsx"'},'import { NextRouteComponent } from "@pankod/refine-nextjs-router";\n\nexport default NextRouteComponent.bind({ initialRoute: "/users" });\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"There is also a way to redirect to a custom page by using file system based routing. If you want to take the advantage of the file system based routing, you can create an ",(0,o.kt)("inlineCode",{parentName:"p"},"index.tsx")," file in the ",(0,o.kt)("inlineCode",{parentName:"p"},"pages")," directory and redirect to the route you want."))),(0,o.kt)(i.Z,{value:"remix-initial-route",mdxType:"TabItem"},(0,o.kt)("p",null,"Since Remix uses file system based routing, instead of the ",(0,o.kt)("inlineCode",{parentName:"p"},"routerProvider")," prop of ",(0,o.kt)("inlineCode",{parentName:"p"},"<Refine/>"),", you should pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialRoute")," property to the context of the ",(0,o.kt)("inlineCode",{parentName:"p"},"RemixRouteComponent")," from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-remix-router"),"."),(0,o.kt)("p",null,"In the example below, the initial route is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"/users"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="app/routes/index.tsx"',title:'"app/routes/index.tsx"'},'import { RemixRouteComponent } from "@pankod/refine-remix-router";\n\nexport default RemixRouteComponent.bind({ initialRoute: "/users" });\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Splat routes are the recommended way to handle ",(0,o.kt)("strong",{parentName:"p"},"refine")," routing in Remix apps. All you need to do is to create a ",(0,o.kt)("inlineCode",{parentName:"p"},"$.tsx")," file in the ",(0,o.kt)("inlineCode",{parentName:"p"},"app/routes")," directory and export the ",(0,o.kt)("inlineCode",{parentName:"p"},"RemixRouteComponent")," in it.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Splat routes in Remix, does not catch the ",(0,o.kt)("inlineCode",{parentName:"p"},"index")," route. So if you want to redirect to a custom page by using file system based routing, you should create a ",(0,o.kt)("inlineCode",{parentName:"p"},"index.tsx")," file. Inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"index.tsx")," file, you can export the ",(0,o.kt)("inlineCode",{parentName:"p"},"RemixRouteComponent")," by binding the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialRoute")," property or you can have a redirect in the ",(0,o.kt)("inlineCode",{parentName:"p"},"loader")," function of the route by using ",(0,o.kt)("inlineCode",{parentName:"p"},"redirect")," function from ",(0,o.kt)("inlineCode",{parentName:"p"},"@remix-run/node"),".")))))}d.isMDXComponent=!0}}]);